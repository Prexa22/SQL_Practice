
--Tables:
SELECT * FROM products
SELECT * FROM categories
SELECT * FROM customers
SELECT * FORM orders

1. Show the category_name and description from the categories table sorted by category_name.
SELECT category_name, description FROM categories

2. Show all the contact_name, address, city of all customers which are not from 'Germany', 'Mexico', 'Spain'
select contact_name, address, city
from customers
where country not in ('Germany', 'Mexico', 'Spain')

3. Show order_date, shipped_date, customer_id, Freight of all orders placed on 2018 Feb 26
select order_date, shipped_date, customer_id, freight
from orders
where order_date = '2018-02-26'

4. Show the employee_id, order_id, customer_id, required_date, shipped_date from all orders shipped later than the required date
SELECT employee_id, order_id, customer_id, required_date, shipped_date
FROM orders
WHERE required_date < shipped_date

5. Show all the even numbered Order_id from the orders table
SELECT order_id
FROM orders
WHERE order_id % 2 = 0

6. Show the city, company_name, contact_name of all customers from cities which contains the letter 'L' in the city name, sorted by contact_name
SELECT city, company_name, contact_name
FROM customers
where city LIKE '%L%'
ORDER BY contact_name

7. Show the company_name, contact_name, fax number of all customers that has a fax number. (not null)
select company_name, contact_name, fax
FROM customers
where fax IS NOT NULL

8. Show the first_name, last_name. hire_date of the most recently hired employee.
SELECT first_name, last_name, MAX(hire_date)
FROM employees

9. Show the average unit price rounded to 2 decimal places, the total units in stock, total discontinued products from the products table.
select round(avg(unit_price),2), sum(units_in_stock), 
sum(discontinued) from products

10. Show the ProductName, CompanyName, CategoryName from the products, suppliers, and categories table
select product_name, company_name, category_name
from categories C 
JOIN products P ON C.category_id = P.category_id
JOIN suppliers S ON P.supplier_id = S.supplier_id

11. Show the category_name and the average product unit price for each category rounded to 2 decimal places.
SELECT category_name, ROUND(AVG(unit_price),2)
FROM categories C 
join products P ON C. category_id = P.category_id
group by category_name

12. Show the city, company_name, contact_name from the customers and suppliers table merged together. Create a column which contains 'customers' or 'suppliers' depending on the table it came from.
SELECT city, company_name, contact_name, 'customers'
FROM customers C 
UNION ALL 
SELECT city, company_name, contact_name, 'suppliers'
FROM suppliers S

13. Show the employee's first_name and last_name, a "num_orders" column with a count of the orders taken, and a column called "Shipped" that displays "On Time" if the order shipped_date is less or equal to the required_date, "Late" if the order shipped late. Order by employee last_name, then by first_name, and then descending by number of orders.
SELECT first_name, last_name, COUNT(order_id) AS 'num_orders',
CASE
	WHEN shipped_date <= required_date THEN 'On Time'
    ELSE 'Late'
END AS Shipped
FROM employees E 
JOIN orders O ON E.employee_id = O.employee_id
GROUP BY first_name, last_name, Shipped
ORDER BY last_name, first_name, count(*) DESC
